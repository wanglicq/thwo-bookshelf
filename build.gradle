task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

defaultTasks 'clean', 'build'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'war'

springBoot {
    mainClass = "com.thoughtworks.jimmy.SpringBootWebApplication"
}

jar {
    baseName = 'thwo-bookshelf-service'
    version = '0.1.0'
}

war {
    baseName = "thwo-bookshelf"
    version = "0.1"
}
repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
idea.project.vcs = "Git"

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    compile("mysql:mysql-connector-java:5.1.6")
    compile("org.flywaydb:flyway-core:3.2.1")
    compile("org.slf4j:slf4j-api:1.7.12")
    compile("com.google.code.gson:gson:2.5")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit:4.12")
    testCompile("org.mockito:mockito-core:1.9.5")
    testCompile("com.jayway.jsonpath:json-path:2.1.0")
    //testCompile("org.springframework.web.filter.HttpPutFormContentFilter")
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ['src/main/resources']
    }
    test {
        java.srcDirs = ['src/test/intg/java', 'src/test/unit/java']
        resources.srcDirs = ['src/test/intg/resources', 'src/test/unit/resources']
    }
}

task initSourceFolders << {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}